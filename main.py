import threading
import time
from logger import (
    collector,
    process_logger,
    network_logger,
    device_logger
)
from logger.file_logger import log_file_access
from auth_logging import auth_logger, session_tracker, ssh_logger, gui_session_tracker


if __name__ == "__main__":
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤–æ—Ä–∫–µ—Ä–∞
    collector.init_db()
    collector.start_worker()

    # –õ–æ–≥–∏—Ä—É–µ–º —Ñ–∞–∫—Ç –≤—Ö–æ–¥–∞
    auth_logger.log_auth()

    # –°–ø–∏—Å–æ–∫ –ø–æ—Ç–æ–∫–æ–≤
    threads = [
        # threading.Thread(target=process_logger.log_processes, daemon=True),
        # threading.Thread(target=network_logger.log_network_connections, daemon=True),
        # threading.Thread(target=session_tracker.track_sessions, daemon=True),
        threading.Thread(target=log_file_access, daemon=True),
        threading.Thread(target=device_logger.monitor_devices, daemon=True),
        # threading.Thread(target=gui_session_tracker.track_gui_sessions, daemon=True), 
        # threading.Thread(target=ssh_logger.track_ssh_connections, daemon=True)
    ]

    for t in threads:
        t.start()

    print("‚úÖ –í—Å–µ –ª–æ–≥–≥–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞.")
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\nüõë –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.")